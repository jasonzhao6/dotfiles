Keymap: kubectl_keymap.zsh

  `   1   2   3   4   5   |   6   7   8   9   0   [   ] 
      '   ,   .  <p> (y)  |  (f) (g) <c> (r) (l)  /   =   \ 
      a   o  (e) <u>  i   |  <d> (h) <t> <n> <s>  - 
      ;   q  (j) (k)  x   |  (b) <m> (w) <v>  z 

  `<>` key initials have one mapping
  `()` key initials have multiple mappings

Keymap Usage

  $ k                                # Show this keymap
  $ k <regex>                        # Search this keymap

  $ k.<key>                          # This mapping takes no variable
  $ k.<key> <var>                    # This mapping takes one variable
  $ k.<key> <var>?                   # This mapping takes zero or one variable
  $ k.<key> <var>*                   # This mapping takes zero or multiple variables
  $ k.<key> (1-10)                   # This mapping takes an exact value from the list

     ^                               # The `.` is only for documentation
                                     # Omit it when invoking a mapping

Keymap List

  $ k <kubectl command>              

  $ k.n <namespace>?                 # Set QA namespace (to 'transaction-engine')
  $ k.e1 <namespace>?                # Set QA namespace, region, and kube config
  $ k.e2 <namespace>?                # Set QA namespace, region, and kube config
  $ k.w2 <namespace>?                # Set QA namespace, region, and kube config

  $ k.k <type> <match>* <-mismatch>* # Get resources as args
  $ k.h <match>* <-mismatch>*        # Get pods as args
  $ k.hh <match>* <-mismatch>*       # Get unready pods as args
  $ k.t <match>* <-mismatch>*        # Get deployments as args
  $ k.m <pod>                        # Edit a pod with TextMate
  $ k.w <deployment>                 # Edit a deployment with TextMate
  $ k.v <type> <name>                # Edit a given type with TextMate

  $ k.b <pod>                        # Exec into bash
  $ k.bc <command> <pod>             # Exec a command
  $ k.c (e11,e12,e21,w21)?           # Copy Prod helpers and history bindings
  $ k.l <pod>                        # Show logs
  $ k.ll <pod>                       # Tail logs
  $ k.lp <pod>                       # Show previous logs

  $ k.r <deployment>                 # Restart a deployment
  $ k.rd <daemon set>                # Restart a daemon set
  $ k.rs <stateful set>              # Restart a stateful set
  $ k.rm <pod>                       # Remove a pod
  $ k.s <count> <deployment>         # Scale a deployment

  $ k.f <match>* <-mismatch>*        # Filter resource types
  $ k.ff                             # Save a copy of resource types
  $ k.g <type> <name>                # Get resources
  $ k.gg <type> <name>               # Get resources with `-o wide`
  $ k.d <type> <name>                # Describe resources
  $ k.j <type> <name>                # Get resource as json & save a copy
  $ k.jj                             # Get the copy of json
  $ k.y <type> <name>                # Get resource as yaml & save a copy
  $ k.yy                             # Get the copy of yaml

  $ k.u                              # Run unit tests and update snapshots
  $ k.p <yaml file>                  # Print spec from yaml file locally
