Keymap: aws_keymap.zsh

  `  (1) (2)  3   4   5   |   6   7   8   9  <0>  [   ] 
      '   ,   .  (p)  y   |   f   g  (c) <r>  l   /   =   \ 
     (a) (o) (e)  u   i   |   d   h  <t> (n) (s)  - 
      ;  (q)  j   k   x   |   b  (m) <w>  v   z 

  `<>` key initials have one mapping
  `()` key initials have multiple mappings

Keymap Usage

  $ s                         # Show this keymap
  $ s <regex>                 # Search this keymap

  $ (|)? s.<key>              # This mapping can be invoked after a `|`
  $ s.<key>                   # This mapping takes no variable
  $ s.<key> <var>             # This mapping takes one variable
  $ s.<key> <var>?            # This mapping takes zero or one variable
  $ s.<key> <var>*            # This mapping takes zero or multiple variables
  $ s.<key> (1-10)            # This mapping takes an exact value from the list

     ^                        # The `.` is only for documentation
                              # Omit it when invoking a mapping

Keymap List

  $ s.o                       # List Opal groups
  $ s.o <match>* <-mismatch>* # Filter Opal groups

  $ s.1                       # MQ login to 01
  $ s.2                       # MQ login to 02
  $ s.0                       # MQ logout
  $ s.11                      # MQ logout, then login to 01
  $ s.22                      # MQ logout, then login to 02

  $ s.e1                      # Use us-east-1 region
  $ s.e2                      # Use us-east-2 region
  $ s.w2                      # Use us-west-2 region
  $ s.c1                      # Use eu-central-1 region

  $ s.e <name>                # EC2 search
  $ s.ee <ec2 id>             # EC2 open in new tab
  $ s.a <name>                # ASG search
  $ s.aa <asg id>             # ASG open in new tab
  $ s.c                       # Copy history bindings
  $ s.s                       # SSM start session with `sudo -i`
  $ s.sc                      # SSM start session with command
  $ s.sm                      # SSM start session

  $ s.m <name>                # Secret Manager get latest version
  $ s.m <name> <version>      # Secret Manager get by version
  $ s.md <name>               # Secret Manager delete
  $ s.r <name>                # Parameter Store get latest version
  $ s.t <message>             # STS decode

  $ s.n <name>                # SNS search
  $ s.nn <topic arn>          # SNS open in new tab

  $ s.q <name>                # SQS search
  $ s.qq <queue url>          # SQS open in new tab
  $ s.qg <queue url>          # SQS get stats
  $ s.qr <queue url> <count>? # SQS receive message
  $ s.qpurge <queue url>      # SQS purge

  $ s.p <name>                # Code Pipeline search
  $ s.pp <name>               # Code Pipeline get latest status
