# Terminal
export EDITOR='mate --wait' # `git rebase --interactive`
export BUNDLER_EDITOR='mate' # `bundle open GEM_NAME`
export HISTCONTROL='ignoredups'
function git_branch() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'; }
  ORANGE='\[\033[0;33m\]'
  NO_COLOR='\[\033[0m\]'
  PS1="$NO_COLOR\W$ORANGE\$(git_branch)$NO_COLOR\$ "

# Path
export NVM_DIR="$HOME/.nvm"
  [ -s '/usr/local/opt/nvm/nvm.sh' ] && . '/usr/local/opt/nvm/nvm.sh'
  [ -s '/usr/local/opt/nvm/etc/bash_completion' ] && . '/usr/local/opt/nvm/etc/bash_completion'
export PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
export PATH="/usr/X11/bin:$PATH"
export PATH="/usr/local/opt/python@3.7/bin:$PATH"

# Environment
[ -s "$HOME/.profile" ] && source "$HOME/.profile"
[ -s "$HOME/.secret_profile" ] && source "$HOME/.secret_profile"
[ -s "$HOME/.rvm/scripts/rvm" ] && source "$HOME/.rvm/scripts/rvm"
eval "$(direnv hook bash)"
alias bp='mate ~/.bash_profile'
alias bpp='source ~/.bash_profile && cp ~/.bash_profile ~/Documents/dotfiles/bash_profile && cp ~/.secret_profile ~/Library/Mobile\ Documents/com~apple~CloudDocs/Try/config/secret_profile.txt'
alias bps='mate ~/.secret_profile'
alias da='direnv allow && cp .envrc ~/Library/Mobile\ Documents/com~apple~CloudDocs/Try/config/envrc/${PWD##*/}.txt'
alias dm='mate .envrc'
alias dmm='mate ~/Library/Mobile\ Documents/com~apple~CloudDocs/Try/config/envrc/'
alias va='source venv/bin/activate'
alias vd='deactivate'

# Navigation
alias cdd='cd ~/Documents/dotfiles'
alias cdl='cd ~/Downloads'
alias cdm='cd ~/Documents'
alias cdt='cd ~/Desktop'
alias cdy='cd ~/Library/Mobile\ Documents/com~apple~CloudDocs/Try'

# Utility
alias cc='caffeinate'
alias grep='grep --colour=always'
alias ls='ls --color=always'
alias mm='mate .'
alias oo='open .'
alias tt='~/Documents/tt/tt.rb'
function ren() { for old in *.$1; do mv $old `basename $old .$1`.$2; done; }

# Localhost
alias ee='clear; npx eslint .'
alias ff='node __FileWatcherServer__.js'
alias hh='python -m SimpleHTTPServer 3000'
alias jj='cdy; ruby json.rb'
alias jm='cdy; mate json.rb '
alias rr='clear; rubocop-git main'

# Rails
alias rc='DISABLE_SPRING=true rails c'
alias rs='DISABLE_SPRING=true rails s --binding 0.0.0.0'
alias ss='rspec'
alias ssf='rspec --only-failures'

# Rails DB
alias dbg='rails g migration'
alias dbm='rake db:migrate; dbt'
alias dbr='rake db:rollback; dbt'
alias dbt='rake db:test:prepare'

# Git
alias gb='git branch --merged | grep --invert-match main$ | grep --invert-match ^\*'
alias gbb='gb | xargs git branch --delete; git remote prune origin'
alias gf='git push --force'
alias gg='git checkout main; git pull'
alias gi='git cherry-pick'
alias gm='git add --all .; git commit --amend'
alias gn='gg; git checkout -b'
function gh() { open https://github.com/apartmentlist/${PWD##*/}/commit/$@; }
function gr() { git log --all --grep="$@" --pretty=format:'%C(yellow)%h %C(red)%ad %C(reset)%s %C(blue)%an' --date=short; }
function pp() { git push ${@-heroku} HEAD:main --force; }

# Git rebase
alias gx='git add --all .; git commit --fixup'
alias gxa='git add --all .; git rebase --abort'
alias gxc='git add --all .; git rebase --continue'
alias gxx='git rebase --interactive --autosquash main'
function gxb() { git rebase --interactive --autosquash HEAD~$(($@ + 1)); }

# Git reset
alias gu='git reset --soft HEAD^'
alias gz='git add .; git reset --hard'
function guz() { git reset --soft HEAD~$@; gz; }

# Git stash
alias gc='git stash clear'
alias gl='git stash list'
alias gp='git stash pop'
alias gs='git add --all .; git stash save'
function ga() { git stash apply "stash@{$@}"; }
function gd() { git stash drop "stash@{$@}"; }

# Go
function gos() { go build -o bin/${PWD##*/} -v . && heroku local; }

# Heroku
function h() { HH=${PWD##*/}; heroku $@ --app alp-${H-${HH//_/-}}; }
function hx() { HH=${PWD##*/}; heroku $@ --app alx-${H-${HH//_/-}}; }

# Google Cloud
if [ -f '/Users/jasonzhao/Documents/google-cloud-sdk/path.bash.inc' ]; then . '/Users/jasonzhao/Documents/google-cloud-sdk/path.bash.inc'; fi
if [ -f '/Users/jasonzhao/Documents/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/jasonzhao/Documents/google-cloud-sdk/completion.bash.inc'; fi
